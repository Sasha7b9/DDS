//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*! \page page01 1. Алгоритмы
    \tableofcontents

    \section sec11 1. Инициализация аппаратной части.

    \section sec12 2. Взаимодействие с основным процессором.
    Обмен данным с основным процессором происходит через SPI.
    Команды делятся на команды записи @ref Command и команды чтения @ref CommandGenerator.
    Ведущим является основной процессор.
    После инициализации основной процессор начинает присылать байты @ref READ_SERVICE_COMMAND с частотой 100 раз в секунду. В случае, если процессор 
    панели не имеет данных для передачи, то он отсылает обратно байты @ref WRITE_SERVICE_COMMAND. В случае, если имеются данные для передачи от 
    панели к основному процессору, они посылаются. В этом случае основной процессор увеличивает скорость обмена до максимума. После окончания передачи
    скорость возвращается к исходному значению.

    \code
    Список команд, которые могут быть приняты от основного процессора.
    +----------------------+---------------------------------------------------------------+--------------------------------------------------------+
    | Команда              | Формат команды                                                | Описание                                               |
    +----------------------+---------------------------------------------------------------+--------------------------------------------------------+
    | READ_SERVICE_COMMAND | COM                                                           |"Пустая" команда, нужна для приёма информации от панели |
    | READ_POINTS          | COM Channel[1] число_точек[1] точка1[1]                       |Приём точек для задания произвольного сигнала           |
    |                      |     точка2[1] ... точкаN[1]                                   |                                                        |
    +----------------------+---------------------------------------------------------------+--------------------------------------------------------+
    \endcode
    \n
    \code
    Список команд, которые могут быть переданы в основной процессор.
    +-----------------------+--------------------------------------------------------------+--------------------------------------------------------+
    | Команда               | Формат команды                                               | Описание                                               |
    +-----------------------+--------------------------------------------------------------+--------------------------------------------------------+
    | WRITE_SERVICE_COMMAND | COM                                                          |                                                        |
    | SET_PARAMETER_CHANNEL | COM Channel[1] ParameterChannel[1] значение[4]               | Значение передаётся четырьмя байтами float от младшего |
    |                       |                                                              | к старшему                                             |
    | SET_FORM_CHANNEL      | COM Channel[1] FormChannel[1]                                |                                                        |
    +-----------------------+--------------------------------------------------------------+--------------------------------------------------------+
    \endcode
    
    \code
    * Число в квадратных скобках означает количество байт.
    \endcode

    \section sec13 3. Алгоритм обмена по SPI между процессорами

    3.1 Алгоритм передачи.\n

    1. Послать первый байт.
    2. Послать следующий байт с одновременным приёмом предыдущего.
    3. Сравнить принятый байт с ранее переданным.
        Если совпадают - переход к 2.
        Если не совпадают

    3.2 Алгоритм приёма.\n

    \section sec14 4. Запись сигнала произвольной формы в ПЛИС.

    Для записи сигнала произвольной формы исползуются 2 блока памяти 14 бит на каждый канал. Каждый блок памяти имеет объём 8кБ. Блоки памяти 
    располагаются последовательно:\n
    RAM0 - младшие 8 бит канала А;\n
    RAM1 - старшие 6 бит канала А;\n
    RAM2 - младшие 8 бит канала В;\n
    RAM3 - старшие 6 бит канала В.\n
    Для записи данных первым делом нужно установить бит RG0.0 в "0". После этого счётчик адреса, который используется для записи сигнала, 
    устанавливается в 0. Состояние счётчика инкрементируется сигналом контроллера WR - порт PD5 - положительным импульсом 0-1-0. Последовательность 
    записи такова:\n
    - установить данные D7...D0 на выводах контроллера;\n
    - задержка 1...2мкс;\n
    - записать данные путём подачи импульса WR;\n
    - снятием ипульса сигнала WR адресный счётчик ПЛИС инкрементируется;\n
    - задержка 1...2мкс;\n
    - повторяются эти операции до тех пор, пока не будут записаны все 4 блока памяти;\n
    - по окончании записи бит RG0.0 устанавливается в состояние "1".\n
        Данные в память должны записываться в прямом коде для правильной работы аппаратных умножителей ПЛИС:\n
        0XXXXXXXXXXXXX - положительные значения [0...8191];\n
        1XXXXXXXXXXXXX - отрицательные значения [-8191...-0].\n

    \section sec15 5. Назначение мультиплексора

    MX1 - коммутация первого канала
    MX2 - коммутация второго канала

    \code
    +----------------+-----------+------------------------------------------------------------------------------------+
    | Вход           | Состояние |                         Действие                                                   |
    | мультиплексора |           |                                                                                    |
    +----------------+-----------+------------------------------------------------------------------------------------+
    | MX1.0          |    1      | На выход канала 1 подаётся синус (в том числе и манипулированный обоими способами) |
    | МХ1.0          |    0      | На выход канала 1 подаются все остальные сигналы                                   |
    | MX2.0          |    1      | На выход канала 2 подаётся синус (в том числе и манипулированный обоими способами) |
    | МХ2.0          |    0      | На выход канала 2 подаются все остальные сигналы                                   |
    +----------------+-----------+------------------------------------------------------------------------------------+
    \endcode

    \section sec16 6. Манипуляция синусоидальным сигналом

    Для управления режимами манипуляции используются биты 3, 4, 5, 6 регистра управления RG0 ПЛИС.

    \code
    +-------+------+--------------------------------------------------------------------------------------+
    |  RG0  |  MX  |                                                                                      |
    +---+---+------+---------+                                                                            |
    | 3 | 4 | 1[0] | Канал 1 |                          Действие                                          |
    | 5 | 6 | 2[0] | Канал 2 |                                                                            |
    +---+---+------+---------+----------------------------------------------------------------------------+
    | 1 | 1 |  0   | Манипуляция выключена, сигнал на канале формирует ПЛИС                               |
    | 1 | 1 |  1   | Сигнал на канале формирует AD9952 (синусоида), манипуляция запрещена                 |
    | 0 | 1 |  1   | Сигнал на канале формирует AD9952, манипуляция сигналом OSK ("пила")                 |
    | 1 | 0 |  1   | Сигнал на канале формирует AD9952, манипуляция формирователем импульсов этого канала |
    +---+---+------+--------------------------------------------------------------------------------------+
    \endcode
*/
